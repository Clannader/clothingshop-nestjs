1.review导入类型和类的区分 √
2.重新分类引入,拆分多个类别,不耦合在一起,例如common什么都有,应该common/config,common/enum √
3.研究一下如何判断是测试模式还是开发模式,屏蔽测试模式下的报错 √
npm warn deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
npm warn deprecated csurf@1.11.0: Please use another csrf package
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
npm warn deprecated vis@4.21.0: Please consider using https://github.com/visjs

4.目前升级mongoose时,logger日志类注释调了,后期看如何改动
5.后期新增读取config.ini的类,单独可以运行获取数据,配置是否多进程和单进程启动,使用cluster进行多进程 √
6.目前发现不管是修复索引还是获取数据库表,不懂是代码没有使用表还是mongodb认为没有数据就不返回该表的信息
需要后期测试 √
7.更新jest后,package.json的jest配置有所变化部分配置已经不生效了,需要有空研究一下 √

任务
1.写sequence的controller,新增测试定时任务@nestjs/schedule,新增定时任务测试sequence获取id问题 √,后期测试2台服务器同时抢id时会不会重复
2.写系统配置相关接口,新增写日志,check方法,新增编辑删除等接口
3.思考时区设置,货币设置,国家,省份,城市设置的表结构如何设计,考虑一个表能兼容2-4级阶层的数据,也能同一个表存杂七杂八的数据,并且有独立的字段
4.使用async await时的then和catch如何优雅的返回断言类型 √ 暂时解决
5.思考如何定义内部值和对外值,参考java的@JsonProperty(value="status"),swagger定义res_status,但是返回status,参考使用class-transformer
  确实需要考虑序列化和反序列化的问题,不管是req还是resp都可以做到字段的隐藏和修改 √
6.测试每天凌晨0点的定时器功能 √
7.nestjs/axios 连接池agentkeepalive 代理tunnel-agent √
8.是否考虑每个表都有一个更新时间的字段[创建时间,创建人,上一次更新时间](用户表,权限表,权限组表都没加)
9.多台服务器如何同步相同的某个时间,或者如何同时开始定时器,调整定时器的频率 √
10.请求服务类还缺少写请求日志的逻辑,缺少重连的机制
11.思考能否不通过@Inject()来实例化对象,并且能正常使用
12.关于接口类,应该是定义了一个类,里面使用了某个接口,通过不同的业务实现这个接口,然后注入到那个类中体现不同的逻辑
13.后期考虑axios请求时的错误区分是http错误还是请求返回值的code错误
14.解决node:cluster的import问题
15.虽然可以同步内存了,但是如果内存是一个类,由于进程发送消息进行了序列化,导致取消息时,得到的对象不是发送时的一样,需要找模块包对类序列化.
   按照网上的写法,如果需要序列化,那么需要重写toJSON()方法即可
16.研究process.nextTick,,setTimeout,setImmediate三个机制的使用 √
17.研究@nestjs/schedule模块包的源代码 √
18.研究nodejs的事件循环机制
19.实现同步服务器消息代码,ini中配置所有服务器地址,顺便新增读取服务器日志功能,对服务器地址进行加密返回给前端,不考虑暴露地址 √
20.对比索引的接口新增返回数据库中实际的索引值回去,可以看到数据库的值和默认值的差别(原代码已经新增新的差异,需要同步到这里) √
21.新增用户登录时,同一个用户最多在线10次,避免恶意登录服务器
22.研究如何使用rsa加解密 √
23.继承这个接口OnApplicationShutdown,研究服务器断开时需要的操作,还有启动时需要的操作 √
24.关于RSA加密传输逻辑
客户端 ---> 服务器 ---> 客户端(需要分通信层加密和存储层加密)
1.通信层加密
  1.1 客户端发送加密数据到服务器,需要临时生成一个AES密钥,加密明文,然后通过公钥加密密钥丢回服务器
  服务器端使用私钥解密出AES密钥,对数据进行解密,即已完成流程
  客户端使用crypto.randomBytes(32).toString('hex'),随机生成一个64位的密钥,使用3DES加密明文
  1.2 客户端如果需要接受敏感信息,则需要临时生成一个AES密钥,通过公钥加密丢回服务器
  服务器端使用私钥解密出AES密钥,通过AES密钥加密敏感信息,然后返回给客户端,客户端使用AES密钥解密服务器返回的内容
2.存储层加密
  2.1 服务器拿到明文后,另外使用另一套RSA对数据进行加密,然后存储到数据库中,考虑密钥的有效期和定时更换密钥的逻辑
  通过数据的密钥ID找到公钥和私钥加解密,公钥和私钥是持久化在其他系统中,如果定期更换时,所有新来的数据则会按新的逻辑进行加解密.
  2.2 客户端请求拿服务器数据时,服务器就会针对数据解密成明文后,按照客户的AES密钥加密返回
25.修改登录密码使用公钥加密后返回,避免看到实际密码 √
26.监听消息的方法以后改成新增修饰器定义那些方法接受到消息做什么事情,参考微服务的消息cmd处理模式 √
27.看看数据库字段如何定义一个类的类型,看看子文档和定义一个类的类型有什么区别,思考ref的作用,关于ref,看看能否绑定那个表的所有字段
   先暂时保存代码,后续代码加上时再做测试吧.主要通过测试rsa加密算法时存id和密文作为对象
28.新增系统参数表
29.如何获取原始的rawBody:Buffer,获取到了需要判断解密然后传入后续的校验 √
30.需要新增3个修饰器,发消息,拿定时器,获取控制器的名称,还剩一个发消息修饰器没有测试了,另外2个已经完成 √
31.关于生产环境打包,整理package.json的生成环境依赖包,发现需要修改运行脚本命令,需要指向main.js,新增cross-env,修改打包出来的文件package.json
打包整理package.json文件的内容以及其他资源文件,能够一键自动化下载安装包运行,自动更新config.ini脚本,考虑前端文件的复制,压缩,版本号 √
32.fork @nestjs/schedule,修改源代码后自己发布,下载安装测试吧... √
33.新增用户的登录双重认证
34.最新日志框架winston, pino
35.前端项目未初始化界面时如何加入loading界面,如何加入vue-devtool工具,参考https://github.com/kirklin/celeris-web √
36.考虑2FA验证第一次校验需要用户名密码,通过后跳转页面,输入验证码,带回一个jwtToken用于回传服务器找到指定用户的密钥生成的code来匹配
考虑最大输入多少次,限制次数和锁时间,正确才生成session
37.写一个监控获取所有内存值的接口,每次调用获取服务器所有内存值
38.JWT的凭证没有加入权限的限制,需要修改,没有判断权限的逻辑和获取 √
39.考虑内部查询日志和同步消息时,使用服务器内部授权私钥通信,不使用session通信
40.系统数据表,新增内存获取配置,加解密通信

2025-02-28更新
39.更新依赖包后遇到几个问题
1.需要测试缓存类是否生效
2.需要测试定时器是否能正常获取到,并且可以重新启动定时器
3.keyv这个包打包时类型校验不过
4.req.query这个字段变成可读,xss如何防止

RSA数据库加解密
1.数据库请求服务器获取敏感信息,先调用getSession(),获取新的会话
2.调用请求数据的接口,带上会话和DES密钥加密后
3.服务器识别到会话ID内容,取库的出来解密,按DES加密后传回,销毁会话
4.数据库密文结构:idCard:{id,secretText(密文)}
5.如果客户端不传会话ID,服务器不返回相关密文字段

下一个计划:系统配置表的增删改查,加解密存储,研究数据库的第27点问题***,排期问题33,31,20,21,19(关于这个问题需要新增服务器内部授权私钥通信,不使用session通信)

2025-05-23
1.系统配置表的增删改查--已完成
2.加解密存储--已完成
3.关于第27点问题,不使用Schema的叫做嵌套文档,使用的就是子文档,嵌套文档没办法做校验,似乎只有子文档可以https://mongoosejs.com/docs/subdocs.html
关于嵌套文档的验证器不是很完善https://mongoosejs.com/docs/validation.html(Required Validators On Nested Objects)